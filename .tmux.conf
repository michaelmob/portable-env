# vim: sw=2 et

#
# ----------------- 
# Root Keybindings
# ----------------- 
# Enter copy-mode:   <prefix> [
# Paste clipboard:   <prefix> P
# Source config:     <prefix> R
# Kill window:       <prefix> x
# Focus window:      <prefix> h,j,k,l
# Resize window:     <prefix> M-h,M-j,M-k,M-l
# Split window:      <prefix> C-s, <prefix> C-v
# Create window:     <prefix> C-c
# Yank to clip:      <prefix> Y
# Paste from clip:   <prefix> P
#

#
# ----------------- 
# Copy-mode Keybindings
# ----------------- 
# Start selection:   space
# Yank to clipboard: y
# Exit copy-mode:    i
#
#

set -g prefix C-space
set -g mouse on
set -g mode-keys vi
set -g escape-time 0
set -g base-index 1
set -g renumber-windows on
set -g automatic-rename off
set -g detach-on-destroy on
set -g default-terminal 'tmux-256color'
set -as terminal-overrides ',xterm-256color:Tc:sitm=\E[3m'
set -g default-command "/bin/bash --rcfile $PORTABLE/activate"
set -g status-left ''
set -g status-right '%a %b %d %R #[bold,fg=blue,bg=black] #S #[fg=white,fg=white,bg=blue] #H '
set -g status-position 'bottom'
set -g status-justify 'left'
set -g status-fg 'white'
set -g status-bg 'black'
set -g status-interval 2
set -g status-left-length 100
set -g window-status-format '#[bold,fg=white] #I#[default]:#W '
set -g window-status-current-format '#[bold,fg=yellow,bg=black] #I#[none]:#W '
set -g window-status-separator ''
#set -g remain-on-exit on  # keep window open when all panes are destroyed

bind C-x kill-pane

#bind C-n next-window
#bind C-p previous-window

bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

bind -r M-h resize-pane -L 5
bind -r M-j resize-pane -D 5
bind -r M-k resize-pane -U 5
bind -r M-l resize-pane -R 5

bind C-s split-window -c '#{pane_current_path}'
bind C-v split-window -h -c '#{pane_current_path}'
bind C-c   new-window -c '#{pane_current_path}'

bind R source "$PORTABLE/.tmux.conf" \; display 'Sourced tmux config file'

bind Y run 'tmux save-buffer - | xclip -sel clip -in'  # copy save buffer to clipboard
bind P run 'tmux set-buffer "$(xclip -sel clip -out)"; tmux paste-buffer'  # paste from clipboard

bind C-u copy-mode \; send -X page-up  # enable copy-mode, scroll up
bind C-d copy-mode \; send -X page-down # ..., scroll down
#bind -T copy-mode H send -X start-of-line
#bind -T copy-mode L send -X end-of-line
bind -T copy-mode-vi i send -X cancel  # exit copy-mode
bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -sel clip'  # yank to clip

# Panes: Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\' 'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\' 'select-pane -l'"
